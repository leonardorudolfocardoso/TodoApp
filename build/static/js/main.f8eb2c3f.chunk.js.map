{"version":3,"sources":["components/Header/index.jsx","components/ActionBar/index.jsx","components/CheckBox/index.jsx","components/Todo/index.jsx","components/Container/index.jsx","components/Main/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","ActionBar","props","addTodo","this","id","onClick","todo","document","getElementById","value","Component","CheckBox","checkState","state","toggleCheckBox","bind","setState","customClickEvent","Todo","index","deleteTodo","toggleTodo","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","Container","onDragEnd","result","source","destination","reorderTodo","todos","droppableId","droppableProps","map","key","placeholder","Main","MAX_TODOS_LENGHT","getAvailableId","hasTodoId","getTodo","getTodoIndex","i","length","todoObj","push","alert","console","log","todoIndex","splice","find","findIndex","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f8eb2c3f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './styles.css';\n\nfunction Header() {\n    return (\n        <div className=\"Header\">\n            <h1>Todo App</h1>\n            <h2>Keep your life organized</h2>\n        </div>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nimport './styles.css';\n\nexport default class ActionBar extends Component {\n    constructor(props) {\n        super();\n    }\n    \n    render() {\n        const { addTodo } = this.props;\n        return (\n            <div className=\"ActionBarContainer\">\n                <div className=\"ActionBar\">\n                    <div id='blank-area'></div>\n                    <textarea id='todo-input'>\n                    </textarea>\n                    <button \n                        onClick={()=> {\n                            var todoInput = document.getElementById('todo-input');\n                            var todo = todoInput.value;\n                            addTodo(todo);\n                        }}\n                    >\n                        +\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport './styles.css';\n\nexport default class CheckBox extends Component {\n    constructor(props) {\n        super();\n        this.props = props;\n        const { checkState } = this.props;\n        this.state = {\n            checkState\n        }\n        this.toggleCheckBox = this.toggleCheckBox.bind(this);\n    }\n\n    toggleCheckBox() {\n        var { checkState } = this.state\n        if (checkState === \"checked\") {\n            checkState = \"unchecked\";\n        } else {\n            checkState = \"checked\";\n        }\n        this.setState({ checkState });\n    }\n    \n    render() {\n        return (\n            <div className=\"CheckBox\" onClick={this.props.customClickEvent}>\n                <button \n                    className={this.state.checkState}\n                    onClick={this.toggleCheckBox}\n                >\n                </button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport CheckBox from '../CheckBox';\n\nimport './styles.css';\n\nexport default class Todo extends Component {\n    constructor(props) {\n        super();\n        const { id, todo, checkState } = props;\n        this.state = {\n            id,\n            todo,\n            checkState\n        }\n    }\n    \n    render() {\n        const { id, todo, checkState } = this.state;\n        const { index, deleteTodo, toggleTodo } = this.props;\n        return (\n            <Draggable draggableId={\"todo-\"+id} index={index}> \n            {(provided) => (\n                <div \n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className=\"Todo\"\n                >\n                    <CheckBox \n                        checkState={checkState} \n                        customClickEvent={() => toggleTodo(id)}\n                    />\n                    <div id='todo-text'>\n                        <h1>{todo}</h1>\n                    </div>\n                    <button\n                        id='delete-button'\n                        onClick={() => deleteTodo(id)}\n                    >\n                        X\n                    </button>\n                </div>\n            )}\n\n\n\n            </Draggable>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Todo from '../Todo';\n\nimport './styles.css';\n\nexport default class Container extends Component {\n    constructor(props) {\n        super();\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n\n    onDragEnd(result) {\n        const { source, destination } = result;\n        this.props.reorderTodo(source, destination);\n    }\n    \n    render() {\n        const { todos, toggleTodo, deleteTodo } = this.props;\n        return (\n            <div className=\"Container\">\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <Droppable droppableId={'1'}>\n                        {provided=>(\n                            <div\n                                ref={provided.innerRef}\n                                {...provided.droppableProps}\n                                className='todoList'\n                            >\n                                {todos.map((todo, index) => (\n                                    <Todo\n                                        key={\"todo-\"+todo.id}\n                                        index={index}\n                                        id={todo.id}\n                                        todo={todo.todo}\n                                        checkState={todo.checkState}\n                                        toggleTodo={toggleTodo}\n                                        deleteTodo={deleteTodo}\n                                    />\n                                ))}\n                                {provided.placeholder}\n                            </div>\n                            \n                        )}\n                    </Droppable>\n                </DragDropContext>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport ActionBar from '../ActionBar';\nimport Container from '../Container';\n\n\nimport './styles.css';\n\nexport default class Main extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            todos: [\n                { id: 1, todo: \"Lavar louça\", checkState: \"unchecked\"},\n                { id: 2, todo: \"Secar louça\", checkState: \"unchecked\"}\n            ]\n        };\n        this.MAX_TODOS_LENGHT = 10;\n        this.addTodo = this.addTodo.bind(this);\n        this.getAvailableId = this.getAvailableId.bind(this);\n        this.hasTodoId = this.hasTodoId.bind(this);\n        this.deleteTodo = this.deleteTodo.bind(this);\n        this.toggleTodo = this.toggleTodo.bind(this);\n        this.getTodo = this.getTodo.bind(this);\n        this.getTodoIndex = this.getTodoIndex.bind(this);\n        this.reorderTodo = this.reorderTodo.bind(this);\n    }\n\n    hasTodoId(id) {\n        const { todos } = this.state;\n        for (var i=0; i<todos.length; i++) {\n            var todo = todos[i];\n            if (todo.id===id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getAvailableId() {\n        var id;\n        for (id=0; id<this.MAX_TODOS_LENGHT; id++) {\n            if (!this.hasTodoId(id)) {\n                break;\n            } else if (id===this.MAX_TODOS_LENGHT-1) {\n                return null;\n            }\n        }\n        return id;\n    }\n\n    addTodo(todo) {\n        const { todos } = this.state;\n        var id = this.getAvailableId();\n        if (id===null) {\n            alert('Maximum todos number achieved');\n            return;\n        }\n        var todoObj = {\n            id,\n            todo,\n            checkState: \"unchecked\"\n        }\n        todos.push(todoObj);\n        this.setState({ todos });\n    }\n\n    deleteTodo(id) {\n        console.log(\"deleting todo \" + id);\n        const { todos } = this.state;\n        var todoIndex = this.getTodoIndex(id);\n        todos.splice(todoIndex, 1);\n        this.setState({ todos });\n    }\n\n    toggleTodo(id) {\n        const { todos } = this.state;\n        const todo = this.getTodo(id);\n        const todoIndex = this.getTodoIndex(id);\n        console.log(\"Toggling todo \" + id);\n        if (todo.checkState===\"checked\") {\n            todo.checkState = \"unchecked\";\n        } else {\n            todo.checkState = \"checked\";\n        }\n        todos[todoIndex] = todo;\n        this.setState({ todos });\n    }\n\n    getTodo(id) {\n        const { todos } = this.state;\n        var todo = todos.find(todo => todo.id===id);\n        return todo\n    }\n\n    getTodoIndex(id) {\n        const { todos } = this.state;\n        var todoIndex = todos.findIndex(todo => todo.id===id);\n        return todoIndex;\n    }\n\n    reorderTodo(source, destination) {\n        const { todos } = this.state;\n        const todo = todos[source.index]\n\n        console.log(todo)\n        todos.splice(source.index, 1) // removing todo in old position\n        todos.splice(destination.index, 0, todo); // pushing todo in new index\n        this.setState({ todos });\n    }\n\n    render() {\n        return (\n            <div className=\"Main\">\n                <Container \n                    id='todos-container'\n                    todos={this.state.todos}\n                    toggleTodo={this.toggleTodo}\n                    deleteTodo={this.deleteTodo}\n                    reorderTodo={this.reorderTodo}\n                />\n                <ActionBar \n                    id='todos-action-bar'\n                    addTodo={this.addTodo}\n                />\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}